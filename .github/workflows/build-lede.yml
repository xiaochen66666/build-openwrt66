name: Build LEDE
run-name: ${{ inputs.device }}

on:
  workflow_dispatch:
    inputs:
      device:
        description: '请输入设备型号,比如: ax6s ax3000t x86_64_DEVICE_generic'
        required: true
        default: 'k3'

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
    - name: Checkout
      uses: actions/checkout@main

    - name: Initialization environment
      run: |
        sudo apt update
        sudo apt -y install build-essential clang flex bison g++ gawk \
        gcc-multilib g++-multilib gettext git libncurses5-dev libssl-dev \
        python3-setuptools rsync swig unzip zlib1g-dev file wget

    - name: Clone source code
      run: |
        git clone https://github.com/coolsnowwolf/lede.git && cp -r files lede && chmod 755 -R lede/files && cat feeds.buildinfo >>lede/feeds.conf.default
        cat lede/feeds.conf.default

    - name: Update feeds
      run: cd lede && ./scripts/feeds update -a

    - name: Install feeds
      run: cd lede && ./scripts/feeds install -a && ./scripts/feeds update -a && ./scripts/feeds install -a

   
    - name: Load custom configuration
      run: |
        if ! target_device=$(grep -m 1 "^config TARGET_.*$(echo ${{ inputs.device }} | xargs)" lede/tmp/.config-target.in); then
          echo "Error: The ${{ inputs.device }} device you input does not exist!"
          exit 1
        fi
        DEVICE_NAME=$(echo $target_device | awk -F "DEVICE_" '{print $2}')
        cat <<EOF >lede/.config
        CONFIG_TARGET_$(echo $target_device | awk -F "_" '{print $2}')=y
        CONFIG_TARGET_$(echo $target_device | awk -F "_" '{print $2}')_$(echo $target_device | awk -F "_" '{print $3}')=y
        CONFIG_TARGET_$(echo $target_device | awk -F "_" '{print $2}')_$(echo $target_device | awk -F "_" '{print $3}')_DEVICE_${DEVICE_NAME}=y
        CONFIG_PACKAGE_luci-theme-argon-mod=y
        EOF
        cat config.buildinfo >>lede/.config && cat lede/.config
        echo "DEVICE_NAME=${DEVICE_NAME}" >> $GITHUB_ENV

        
    - name: Compile ${{ env.DEVICE_NAME }} firmware
      run: cd lede && make -j$(nproc) defconfig download clean world

    - name: Upload firmware to workflow directory
      uses: actions/upload-artifact@main
      with:
        name: ${{ env.DEVICE_NAME }}-squashfs
        path: lede/bin/targets/*/*/*squashfs*
        
